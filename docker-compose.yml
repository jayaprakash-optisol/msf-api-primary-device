services:
  postgres:
    image: postgres:latest
    container_name: postgres_msf
    environment:
      - POSTGRES_USER=msf_user
      - POSTGRES_PASSWORD=msf_password
      - POSTGRES_DB=msf_device
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5436:5432'
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U user -d msf_poc']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend

  redis:
    image: 'redis:alpine'
    container_name: redis_msf
    ports:
      - 6379:6379
    command: redis-server --requirepass Sn579s@H02jg
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - backend

  webservice:
    build: '.'
    container_name: webservice
    volumes:
      - .:/webservice
      - /webservice/node_modules
    ports:
      - '8000:8000'
    env_file:
      - '.env'
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend

volumes:
  postgres_data: {}

networks:
  backend:
    driver: bridge
