services:
  webservice:
    build: '.'
    container_name: webservice
    volumes:
      - .:/webservice
      - /webservice/node_modules
    ports:
      - '8000:8000'
    env_file:
      - '.env'
    restart: always
    networks:
      - backend
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=msf_poc
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5434:5432'
    restart: always
    networks:
      - backend
  redis:
    image: 'redis:alpine'
    ports:
      - 6379:6379
    command: redis-server --requirepass Sn579s@H02jg
    restart: always
    networks:
      - backend
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    ports:
      - 9090:9090
    expose:
      - 9090
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - monitoring
      - backend
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - monitoring

volumes:
  prometheus_data: {}
  grafana_data: {}
  postgres_data: {}
  redis_data: {}

networks:
  backend:
    driver: bridge
  monitoring:
    driver: bridge
